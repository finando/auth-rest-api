name: Deploy to AWS ECR

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      version:
        required: false
        type: string
      region:
        required: false
        type: string
        default: eu-west-1
    secrets:
      FINANDO_GITHUB_BOT_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

env:
  HUSKY: 0

jobs:
  deploy-to-aws-ecr:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Configure NPM authentication token for GitHub Packages
        run: npm set //npm.pkg.github.com/:_authToken ${{ secrets.FINANDO_GITHUB_BOT_TOKEN }}

      - name: Install dependencies
        run: npm ci --quiet --ignore-scripts

      - name: Build
        run: npm run build

      - name: Prune dependencies
        run: npm prune --omit=dev

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Capture latest package version
        if: ${{ inputs.version == '' }}
        run: echo "VERSION=$(git describe --abbrev=0 --tags)" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          context: git
          images: ${{ steps.ecr-login.outputs.registry }}/${{ vars.ECR_REPOSITORY }}
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.version || env.VERSION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
