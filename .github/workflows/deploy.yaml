name: Deploy to AWS ECR

on:
  push:
    branches:
      - master

jobs:
  deploy-to-aws-ecr:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Deploy to AWS ECR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci --quiet --ignore-scripts

      - name: Audit dependencies
        run: npm audit --omit=dev --audit-level=moderate

      - name: Lint project
        run: npm run lint:project

      - name: Test
        run: npm run test:coverage

      - name: Install semantic-release plugins
        run: npm i -D @semantic-release/changelog @semantic-release/git

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Capture new version
        run: echo "VERSION=$(cat .VERSION)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        if: env.VERSION != ''
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        if: env.VERSION != ''
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker meta
        if: env.VERSION != ''
        id: meta
        uses: docker/metadata-action@v4
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: auth-rest-api
        with:
          images: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.VERSION }}

      - name: Set up Docker Buildx
        if: steps.meta.outputs.tags != ''
        uses: docker/setup-buildx-action@v2

      - name: Build, tag, and push image to Amazon ECR
        if: steps.meta.outputs.tags != ''
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
